INFO:root:architecture:AtlasNet_seed=0|task:Standard|kind:a_NA|source:init_kaiNormal|layer:c2|pooling:max
INFO:root:c2
Loading catalog from entrypoints
Loading lookup from /home/wtownle1/env_dim/dim-powerlaw/lib/python3.7/site-packages/brainscore/lookup.csv
results/fall2023/rsa_UC|seed:0|pooling:max|nPCs:NA|benchmark:dicarlo.MajajHong2015.IT.public-rsa.csv
layers:   0%|          | 0/1 [00:00<?, ?it/s]INFO:model_tools.activations.core.ActivationsExtractorHelper:Running stimuli

activations:   0%|          | 0/3200 [00:00<?, ?it/s][A
activations:   2%|▏         | 64/3200 [00:02<02:23, 21.92it/s][A
activations:   4%|▍         | 128/3200 [00:03<01:27, 34.95it/s][A
activations:   6%|▌         | 192/3200 [00:04<01:04, 46.50it/s][A
activations:   8%|▊         | 256/3200 [00:05<00:49, 59.74it/s][A
activations:  10%|█         | 320/3200 [00:06<00:41, 68.69it/s][A
activations:  12%|█▏        | 384/3200 [00:06<00:36, 77.85it/s][A
activations:  14%|█▍        | 448/3200 [00:07<00:31, 87.22it/s][A
activations:  16%|█▌        | 512/3200 [00:07<00:27, 96.79it/s][A
activations:  18%|█▊        | 576/3200 [00:08<00:27, 97.06it/s][A
activations:  20%|██        | 640/3200 [00:08<00:24, 103.03it/s][A
activations:  22%|██▏       | 704/3200 [00:09<00:24, 102.22it/s][A
activations:  24%|██▍       | 768/3200 [00:10<00:22, 108.91it/s][A
activations:  26%|██▌       | 832/3200 [00:10<00:19, 118.61it/s][A
activations:  28%|██▊       | 896/3200 [00:11<00:18, 121.77it/s][A
activations:  30%|███       | 960/3200 [00:11<00:17, 127.04it/s][A
activations:  32%|███▏      | 1024/3200 [00:11<00:16, 134.19it/s][A
activations:  34%|███▍      | 1088/3200 [00:12<00:15, 134.50it/s][A
activations:  36%|███▌      | 1152/3200 [00:12<00:14, 137.36it/s][A
activations:  38%|███▊      | 1216/3200 [00:13<00:13, 147.01it/s][A
activations:  40%|████      | 1280/3200 [00:13<00:12, 156.45it/s][A
activations:  42%|████▏     | 1344/3200 [00:13<00:11, 155.24it/s][A
activations:  44%|████▍     | 1408/3200 [00:14<00:11, 155.41it/s][A
activations:  46%|████▌     | 1472/3200 [00:14<00:10, 158.58it/s][A
activations:  48%|████▊     | 1536/3200 [00:15<00:10, 163.28it/s][A
activations:  50%|█████     | 1600/3200 [00:15<00:09, 160.28it/s][A
activations:  52%|█████▏    | 1664/3200 [00:15<00:09, 164.72it/s][A
activations:  54%|█████▍    | 1728/3200 [00:16<00:08, 166.05it/s][A
activations:  56%|█████▌    | 1792/3200 [00:16<00:08, 168.35it/s][A
activations:  58%|█████▊    | 1856/3200 [00:17<00:07, 169.36it/s][A
activations:  60%|██████    | 1920/3200 [00:17<00:07, 161.96it/s][A
activations:  62%|██████▏   | 1984/3200 [00:17<00:07, 165.97it/s][A
activations:  64%|██████▍   | 2048/3200 [00:18<00:06, 172.21it/s][A
activations:  66%|██████▌   | 2112/3200 [00:18<00:06, 163.68it/s][A
activations:  68%|██████▊   | 2176/3200 [00:18<00:06, 170.48it/s][A
activations:  70%|███████   | 2240/3200 [00:19<00:05, 172.08it/s][A
activations:  72%|███████▏  | 2304/3200 [00:19<00:05, 176.75it/s][A
activations:  74%|███████▍  | 2368/3200 [00:19<00:04, 175.08it/s][A
activations:  76%|███████▌  | 2432/3200 [00:20<00:04, 182.37it/s][A
activations:  78%|███████▊  | 2496/3200 [00:20<00:03, 181.85it/s][A
activations:  80%|████████  | 2560/3200 [00:20<00:03, 188.70it/s][A
activations:  82%|████████▏ | 2624/3200 [00:21<00:02, 193.70it/s][A
activations:  84%|████████▍ | 2688/3200 [00:21<00:02, 196.79it/s][A
activations:  86%|████████▌ | 2752/3200 [00:21<00:02, 198.59it/s][A
activations:  88%|████████▊ | 2816/3200 [00:22<00:01, 195.60it/s][A
activations:  90%|█████████ | 2880/3200 [00:22<00:01, 198.29it/s][A
activations:  92%|█████████▏| 2944/3200 [00:22<00:01, 202.31it/s][A
activations:  94%|█████████▍| 3008/3200 [00:23<00:00, 204.63it/s][A
activations:  96%|█████████▌| 3072/3200 [00:23<00:00, 200.30it/s][A
activations:  98%|█████████▊| 3136/3200 [00:23<00:00, 200.02it/s][A
activations: 100%|██████████| 3200/3200 [00:24<00:00, 201.23it/s][Aactivations: 100%|██████████| 3200/3200 [00:24<00:00, 132.57it/s]
INFO:model_tools.activations.core.ActivationsExtractorHelper:Packaging into assembly
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])

layer packaging:   0%|          | 0/1 [00:00<?, ?it/s][Alayer packaging: 100%|██████████| 1/1 [00:00<00:00, 100.90it/s]

cross-validation:   0%|          | 0/10 [00:00<?, ?it/s][A
cross-validation:  10%|█         | 1/10 [00:02<00:25,  2.79s/it][A
cross-validation:  20%|██        | 2/10 [00:05<00:22,  2.77s/it][A
cross-validation:  30%|███       | 3/10 [00:08<00:19,  2.76s/it][A
cross-validation:  40%|████      | 4/10 [00:11<00:16,  2.74s/it][A
cross-validation:  50%|█████     | 5/10 [00:13<00:13,  2.73s/it][A
cross-validation:  60%|██████    | 6/10 [00:16<00:10,  2.70s/it][A
cross-validation:  70%|███████   | 7/10 [00:18<00:07,  2.66s/it][A
cross-validation:  80%|████████  | 8/10 [00:21<00:05,  2.65s/it][A
cross-validation:  90%|█████████ | 9/10 [00:24<00:02,  2.64s/it][A
cross-validation: 100%|██████████| 10/10 [00:26<00:00,  2.62s/it][Across-validation: 100%|██████████| 10/10 [00:26<00:00,  2.68s/it]
layers: 100%|██████████| 1/1 [00:51<00:00, 51.23s/it]layers: 100%|██████████| 1/1 [00:51<00:00, 51.23s/it]
INFO:root:architecture:AtlasNet_seed=0|task:Standard|kind:a_NA|source:init_kaiUniform|layer:c2|pooling:max
INFO:root:c2
layers:   0%|          | 0/1 [00:00<?, ?it/s]INFO:model_tools.activations.core.ActivationsExtractorHelper:Running stimuli

activations:   0%|          | 0/3200 [00:00<?, ?it/s][A
activations:   2%|▏         | 64/3200 [00:00<00:14, 211.30it/s][A
activations:   4%|▍         | 128/3200 [00:00<00:14, 216.09it/s][A
activations:   6%|▌         | 192/3200 [00:00<00:13, 216.35it/s][A
activations:   8%|▊         | 256/3200 [00:01<00:13, 212.83it/s][A
activations:  10%|█         | 320/3200 [00:01<00:13, 213.38it/s][A
activations:  12%|█▏        | 384/3200 [00:01<00:13, 213.86it/s][A
activations:  14%|█▍        | 448/3200 [00:02<00:12, 213.58it/s][A
activations:  16%|█▌        | 512/3200 [00:02<00:12, 214.59it/s][A
activations:  18%|█▊        | 576/3200 [00:02<00:12, 215.50it/s][A
activations:  20%|██        | 640/3200 [00:02<00:11, 215.86it/s][A
activations:  22%|██▏       | 704/3200 [00:03<00:11, 214.68it/s][A
activations:  24%|██▍       | 768/3200 [00:03<00:11, 214.82it/s][A
activations:  26%|██▌       | 832/3200 [00:03<00:10, 215.30it/s][A
activations:  28%|██▊       | 896/3200 [00:04<00:10, 213.80it/s][A
activations:  30%|███       | 960/3200 [00:04<00:10, 215.02it/s][A
activations:  32%|███▏      | 1024/3200 [00:04<00:10, 216.38it/s][A
activations:  34%|███▍      | 1088/3200 [00:05<00:09, 217.67it/s][A
activations:  36%|███▌      | 1152/3200 [00:05<00:09, 214.65it/s][A
activations:  38%|███▊      | 1216/3200 [00:05<00:09, 213.90it/s][A
activations:  40%|████      | 1280/3200 [00:05<00:08, 215.30it/s][A
activations:  42%|████▏     | 1344/3200 [00:06<00:08, 216.46it/s][A
activations:  44%|████▍     | 1408/3200 [00:06<00:08, 216.94it/s][A
activations:  46%|████▌     | 1472/3200 [00:06<00:07, 216.03it/s][A
activations:  48%|████▊     | 1536/3200 [00:07<00:07, 215.35it/s][A
activations:  50%|█████     | 1600/3200 [00:07<00:07, 216.18it/s][A
activations:  52%|█████▏    | 1664/3200 [00:07<00:07, 216.59it/s][A
activations:  54%|█████▍    | 1728/3200 [00:08<00:06, 216.76it/s][A
activations:  56%|█████▌    | 1792/3200 [00:08<00:06, 217.73it/s][A
activations:  58%|█████▊    | 1856/3200 [00:08<00:06, 217.07it/s][A
activations:  60%|██████    | 1920/3200 [00:08<00:05, 216.37it/s][A
activations:  62%|██████▏   | 1984/3200 [00:09<00:05, 216.77it/s][A
activations:  64%|██████▍   | 2048/3200 [00:09<00:05, 216.70it/s][A
activations:  66%|██████▌   | 2112/3200 [00:09<00:05, 214.66it/s][A
activations:  68%|██████▊   | 2176/3200 [00:10<00:04, 217.60it/s][A
activations:  70%|███████   | 2240/3200 [00:10<00:04, 216.16it/s][A
activations:  72%|███████▏  | 2304/3200 [00:10<00:04, 216.68it/s][A
activations:  74%|███████▍  | 2368/3200 [00:10<00:03, 216.91it/s][A
activations:  76%|███████▌  | 2432/3200 [00:11<00:03, 214.46it/s][A
activations:  78%|███████▊  | 2496/3200 [00:11<00:03, 214.72it/s][A
activations:  80%|████████  | 2560/3200 [00:11<00:02, 214.92it/s][A
activations:  82%|████████▏ | 2624/3200 [00:12<00:02, 213.88it/s][A
activations:  84%|████████▍ | 2688/3200 [00:12<00:02, 212.74it/s][A
activations:  86%|████████▌ | 2752/3200 [00:12<00:02, 211.51it/s][A
activations:  88%|████████▊ | 2816/3200 [00:13<00:01, 210.54it/s][A
activations:  90%|█████████ | 2880/3200 [00:13<00:01, 211.84it/s][A
activations:  92%|█████████▏| 2944/3200 [00:13<00:01, 212.09it/s][A
activations:  94%|█████████▍| 3008/3200 [00:14<00:00, 209.67it/s][A
activations:  96%|█████████▌| 3072/3200 [00:14<00:00, 208.99it/s][A
activations:  98%|█████████▊| 3136/3200 [00:14<00:00, 207.09it/s][A
activations: 100%|██████████| 3200/3200 [00:14<00:00, 206.27it/s][Aactivations: 100%|██████████| 3200/3200 [00:14<00:00, 214.09it/s]
INFO:model_tools.activations.core.ActivationsExtractorHelper:Packaging into assembly
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])

layer packaging:   0%|          | 0/1 [00:00<?, ?it/s][Alayer packaging: 100%|██████████| 1/1 [00:00<00:00, 102.11it/s]

cross-validation:   0%|          | 0/10 [00:00<?, ?it/s][A
cross-validation:  10%|█         | 1/10 [00:02<00:24,  2.69s/it][A
cross-validation:  20%|██        | 2/10 [00:05<00:21,  2.66s/it][A
cross-validation:  30%|███       | 3/10 [00:07<00:18,  2.60s/it][A
cross-validation:  40%|████      | 4/10 [00:10<00:15,  2.58s/it][A
cross-validation:  50%|█████     | 5/10 [00:12<00:12,  2.58s/it][A
cross-validation:  60%|██████    | 6/10 [00:15<00:10,  2.58s/it][A
cross-validation:  70%|███████   | 7/10 [00:18<00:07,  2.59s/it][A
cross-validation:  80%|████████  | 8/10 [00:20<00:05,  2.59s/it][A
cross-validation:  90%|█████████ | 9/10 [00:23<00:02,  2.62s/it][A
cross-validation: 100%|██████████| 10/10 [00:26<00:00,  2.63s/it][Across-validation: 100%|██████████| 10/10 [00:26<00:00,  2.61s/it]
layers: 100%|██████████| 1/1 [00:41<00:00, 41.34s/it]layers: 100%|██████████| 1/1 [00:41<00:00, 41.34s/it]
main total runtime: 0:01:34.016782
