INFO:root:architecture:AtlasNet_seed=0|task:Standard|kind:a_NA|source:init_kaiNormal|layer:c2|pooling:zscore_PCA|n_components:1000
INFO:root:c2
Loading catalog from entrypoints
Loading lookup from /home/wtownle1/env_dim/dim-powerlaw/lib/python3.7/site-packages/brainscore/lookup.csv
layers:   0%|          | 0/1 [00:00<?, ?it/s]INFO:model_tools.activations.core.ActivationsExtractorHelper:Running stimuli

activations:   0%|          | 0/3200 [00:00<?, ?it/s][AINFO:model_tools.activations.core.ActivationsExtractorHelper:Running stimuli
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])


activations:   0%|          | 0/1024 [00:00<?, ?it/s][A[A

activations:   6%|▋         | 64/1024 [00:00<00:06, 150.01it/s][A[A

activations:  12%|█▎        | 128/1024 [00:01<00:07, 119.07it/s][A[A

activations:  19%|█▉        | 192/1024 [00:01<00:08, 103.25it/s][A[A

activations:  25%|██▌       | 256/1024 [00:02<00:08, 92.16it/s] [A[A

activations:  31%|███▏      | 320/1024 [00:03<00:08, 82.69it/s][A[A

activations:  38%|███▊      | 384/1024 [00:04<00:08, 75.20it/s][A[A

activations:  44%|████▍     | 448/1024 [00:05<00:08, 68.91it/s][A[A

activations:  50%|█████     | 512/1024 [00:06<00:08, 62.61it/s][A[A

activations:  56%|█████▋    | 576/1024 [00:08<00:07, 57.98it/s][A[A

activations:  62%|██████▎   | 640/1024 [00:09<00:07, 53.91it/s][A[A

activations:  69%|██████▉   | 704/1024 [00:10<00:06, 49.75it/s][A[A

activations:  75%|███████▌  | 768/1024 [00:12<00:05, 46.67it/s][A[A

activations:  81%|████████▏ | 832/1024 [00:14<00:04, 43.89it/s][A[A

activations:  88%|████████▊ | 896/1024 [00:15<00:03, 40.92it/s][A[A

activations:  94%|█████████▍| 960/1024 [00:17<00:01, 38.77it/s][A[A

activations: 100%|██████████| 1024/1024 [00:19<00:00, 36.75it/s][A[Aactivations: 100%|██████████| 1024/1024 [00:19<00:00, 51.71it/s]
INFO:model_tools.activations.core.ActivationsExtractorHelper:Packaging into assembly
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])


layer packaging:   0%|          | 0/1 [00:00<?, ?it/s][A[A

layer packaging: 100%|██████████| 1/1 [00:01<00:00,  1.86s/it][A[Alayer packaging: 100%|██████████| 1/1 [00:01<00:00,  1.86s/it]
imagenet dict [0] shape
(1000, 1000, 24, 24)


layer principal components:   0%|          | 0/1 [00:00<?, ?it/s][A[A

layer principal components: 100%|██████████| 1/1 [01:09<00:00, 69.85s/it][A[Alayer principal components: 100%|██████████| 1/1 [01:09<00:00, 69.86s/it]

activations:   2%|▏         | 64/3200 [01:56<1:35:30,  1.83s/it][A
activations:   4%|▍         | 128/3200 [01:57<38:58,  1.31it/s] [A
activations:   6%|▌         | 192/3200 [01:58<21:05,  2.38it/s][A
activations:   8%|▊         | 256/3200 [01:59<12:47,  3.84it/s][A
activations:  10%|█         | 320/3200 [02:00<08:15,  5.81it/s][A
activations:  12%|█▏        | 384/3200 [02:01<05:33,  8.43it/s][A
activations:  14%|█▍        | 448/3200 [02:02<03:53, 11.79it/s][A
activations:  16%|█▌        | 512/3200 [02:03<02:48, 15.97it/s][A
activations:  18%|█▊        | 576/3200 [02:04<02:05, 20.96it/s][A
activations:  20%|██        | 640/3200 [02:05<01:36, 26.62it/s][A
activations:  22%|██▏       | 704/3200 [02:06<01:16, 32.65it/s][A
activations:  24%|██▍       | 768/3200 [02:07<01:02, 38.68it/s][A
activations:  26%|██▌       | 832/3200 [02:08<00:53, 44.40it/s][A
activations:  28%|██▊       | 896/3200 [02:09<00:46, 49.16it/s][A
activations:  30%|███       | 960/3200 [02:10<00:42, 53.07it/s][A
activations:  32%|███▏      | 1024/3200 [02:11<00:38, 56.51it/s][A
activations:  34%|███▍      | 1088/3200 [02:12<00:35, 59.32it/s][A
activations:  36%|███▌      | 1152/3200 [02:13<00:33, 61.52it/s][A
activations:  38%|███▊      | 1216/3200 [02:14<00:31, 63.23it/s][A
activations:  40%|████      | 1280/3200 [02:15<00:29, 64.25it/s][A
activations:  42%|████▏     | 1344/3200 [02:16<00:28, 65.21it/s][A
activations:  44%|████▍     | 1408/3200 [02:17<00:27, 65.81it/s][A
activations:  46%|████▌     | 1472/3200 [02:18<00:26, 66.37it/s][A
activations:  48%|████▊     | 1536/3200 [02:19<00:25, 65.72it/s][A
activations:  50%|█████     | 1600/3200 [02:20<00:24, 65.59it/s][A
activations:  52%|█████▏    | 1664/3200 [02:21<00:23, 65.61it/s][A
activations:  54%|█████▍    | 1728/3200 [02:21<00:22, 65.86it/s][A
activations:  56%|█████▌    | 1792/3200 [02:22<00:21, 65.51it/s][A
activations:  58%|█████▊    | 1856/3200 [02:23<00:20, 65.86it/s][A
activations:  60%|██████    | 1920/3200 [02:24<00:19, 66.09it/s][A
activations:  62%|██████▏   | 1984/3200 [02:25<00:18, 65.79it/s][A
activations:  64%|██████▍   | 2048/3200 [02:26<00:17, 65.64it/s][A
activations:  66%|██████▌   | 2112/3200 [02:27<00:16, 65.89it/s][A
activations:  68%|██████▊   | 2176/3200 [02:28<00:15, 65.58it/s][A
activations:  70%|███████   | 2240/3200 [02:29<00:14, 65.08it/s][A
activations:  72%|███████▏  | 2304/3200 [02:30<00:13, 64.82it/s][A
activations:  74%|███████▍  | 2368/3200 [02:31<00:12, 65.35it/s][A
activations:  76%|███████▌  | 2432/3200 [02:32<00:11, 65.62it/s][A
activations:  78%|███████▊  | 2496/3200 [02:33<00:10, 65.93it/s][A
activations:  80%|████████  | 2560/3200 [02:34<00:09, 65.84it/s][A
activations:  82%|████████▏ | 2624/3200 [02:35<00:08, 65.96it/s][A
activations:  84%|████████▍ | 2688/3200 [02:36<00:08, 61.11it/s][A
activations:  86%|████████▌ | 2752/3200 [02:38<00:07, 58.65it/s][A
activations:  88%|████████▊ | 2816/3200 [02:39<00:06, 56.90it/s][A
activations:  90%|█████████ | 2880/3200 [02:40<00:05, 55.88it/s][A
activations:  92%|█████████▏| 2944/3200 [02:41<00:04, 51.26it/s][A
activations:  94%|█████████▍| 3008/3200 [02:43<00:03, 52.12it/s][A
activations:  96%|█████████▌| 3072/3200 [02:44<00:02, 52.51it/s][A
activations:  98%|█████████▊| 3136/3200 [02:45<00:01, 52.92it/s][A
activations: 100%|██████████| 3200/3200 [02:46<00:00, 53.02it/s][Aactivations: 100%|██████████| 3200/3200 [02:46<00:00, 19.20it/s]
INFO:model_tools.activations.core.ActivationsExtractorHelper:Packaging into assembly
zscore
activations zcore shape:
(1000, 576000)
pca eigenvalues:
(1000, 576000)
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])

layer packaging:   0%|          | 0/1 [00:00<?, ?it/s][Alayer packaging: 100%|██████████| 1/1 [00:00<00:00, 99.87it/s]

cross-validation:   0%|          | 0/10 [00:00<?, ?it/s][A
cross-validation:  10%|█         | 1/10 [00:01<00:13,  1.54s/it][A
cross-validation:  20%|██        | 2/10 [00:03<00:12,  1.61s/it][A
cross-validation:  30%|███       | 3/10 [00:04<00:10,  1.56s/it][A
cross-validation:  40%|████      | 4/10 [00:06<00:09,  1.57s/it][A
cross-validation:  50%|█████     | 5/10 [00:07<00:07,  1.58s/it][A
cross-validation:  60%|██████    | 6/10 [00:09<00:06,  1.58s/it][A
cross-validation:  70%|███████   | 7/10 [00:11<00:04,  1.59s/it][A
cross-validation:  80%|████████  | 8/10 [00:12<00:03,  1.58s/it][A
cross-validation:  90%|█████████ | 9/10 [00:14<00:01,  1.55s/it][A
cross-validation: 100%|██████████| 10/10 [00:15<00:00,  1.52s/it][Across-validation: 100%|██████████| 10/10 [00:15<00:00,  1.56s/it]
layers: 100%|██████████| 1/1 [03:02<00:00, 182.57s/it]layers: 100%|██████████| 1/1 [03:02<00:00, 182.58s/it]
INFO:root:architecture:AtlasNet_seed=0|task:Standard|kind:a_NA|source:init_kaiUniform|layer:c2|pooling:zscore_PCA|n_components:1000
INFO:root:c2
layers:   0%|          | 0/1 [00:00<?, ?it/s]INFO:model_tools.activations.core.ActivationsExtractorHelper:Running stimuli

activations:   0%|          | 0/3200 [00:00<?, ?it/s][AINFO:model_tools.activations.core.ActivationsExtractorHelper:Running stimuli
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])


activations:   0%|          | 0/1024 [00:00<?, ?it/s][A[A

activations:   6%|▋         | 64/1024 [00:00<00:05, 174.82it/s][A[A

activations:  12%|█▎        | 128/1024 [00:00<00:05, 150.09it/s][A[A

activations:  19%|█▉        | 192/1024 [00:01<00:06, 136.14it/s][A[A

activations:  25%|██▌       | 256/1024 [00:01<00:06, 124.67it/s][A[A

activations:  31%|███▏      | 320/1024 [00:02<00:06, 115.35it/s][A[A

activations:  38%|███▊      | 384/1024 [00:03<00:05, 107.16it/s][A[A

activations:  44%|████▍     | 448/1024 [00:03<00:05, 100.23it/s][A[A

activations:  50%|█████     | 512/1024 [00:04<00:05, 92.66it/s] [A[A

activations:  56%|█████▋    | 576/1024 [00:05<00:05, 87.08it/s][A[A

activations:  62%|██████▎   | 640/1024 [00:06<00:04, 81.21it/s][A[A

activations:  69%|██████▉   | 704/1024 [00:07<00:04, 76.80it/s][A[A

activations:  75%|███████▌  | 768/1024 [00:08<00:03, 70.25it/s][A[A

activations:  81%|████████▏ | 832/1024 [00:09<00:02, 65.50it/s][A[A

activations:  88%|████████▊ | 896/1024 [00:10<00:02, 59.72it/s][A[A

activations:  94%|█████████▍| 960/1024 [00:12<00:01, 55.73it/s][A[A

activations: 100%|██████████| 1024/1024 [00:13<00:00, 52.30it/s][A[Aactivations: 100%|██████████| 1024/1024 [00:13<00:00, 74.86it/s]
INFO:model_tools.activations.core.ActivationsExtractorHelper:Packaging into assembly
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])


layer packaging:   0%|          | 0/1 [00:00<?, ?it/s][A[A

layer packaging: 100%|██████████| 1/1 [00:01<00:00,  1.63s/it][A[Alayer packaging: 100%|██████████| 1/1 [00:01<00:00,  1.63s/it]
imagenet dict [0] shape
(1000, 1000, 24, 24)


layer principal components:   0%|          | 0/1 [00:00<?, ?it/s][A[A

layer principal components: 100%|██████████| 1/1 [01:08<00:00, 68.38s/it][A[Alayer principal components: 100%|██████████| 1/1 [01:08<00:00, 68.38s/it]

activations:   2%|▏         | 64/3200 [01:44<1:25:15,  1.63s/it][A
activations:   4%|▍         | 128/3200 [01:45<34:51,  1.47it/s] [A
activations:   6%|▌         | 192/3200 [01:46<18:53,  2.65it/s][A
activations:   8%|▊         | 256/3200 [01:47<11:28,  4.27it/s][A
activations:  10%|█         | 320/3200 [01:48<07:26,  6.45it/s][A
activations:  12%|█▏        | 384/3200 [01:49<05:02,  9.32it/s][A
activations:  14%|█▍        | 448/3200 [01:50<03:32, 12.96it/s][A
activations:  16%|█▌        | 512/3200 [01:51<02:34, 17.44it/s][A
activations:  18%|█▊        | 576/3200 [01:52<01:56, 22.60it/s][A
activations:  20%|██        | 640/3200 [01:53<01:30, 28.33it/s][A
activations:  22%|██▏       | 704/3200 [01:54<01:12, 34.33it/s][A
activations:  24%|██▍       | 768/3200 [01:55<01:00, 40.01it/s][A
activations:  26%|██▌       | 832/3200 [01:56<00:51, 45.63it/s][A
activations:  28%|██▊       | 896/3200 [01:56<00:45, 50.27it/s][A
activations:  30%|███       | 960/3200 [01:57<00:41, 54.22it/s][A
activations:  32%|███▏      | 1024/3200 [01:58<00:38, 56.82it/s][A
activations:  34%|███▍      | 1088/3200 [01:59<00:35, 59.63it/s][A
activations:  36%|███▌      | 1152/3200 [02:00<00:33, 61.50it/s][A
activations:  38%|███▊      | 1216/3200 [02:01<00:31, 63.29it/s][A
activations:  40%|████      | 1280/3200 [02:02<00:29, 64.42it/s][A
activations:  42%|████▏     | 1344/3200 [02:03<00:28, 64.48it/s][A
activations:  44%|████▍     | 1408/3200 [02:04<00:27, 65.20it/s][A
activations:  46%|████▌     | 1472/3200 [02:05<00:26, 65.86it/s][A
activations:  48%|████▊     | 1536/3200 [02:06<00:25, 66.25it/s][A
activations:  50%|█████     | 1600/3200 [02:07<00:24, 66.53it/s][A
activations:  52%|█████▏    | 1664/3200 [02:08<00:23, 66.64it/s][A
activations:  54%|█████▍    | 1728/3200 [02:09<00:22, 66.34it/s][A
activations:  56%|█████▌    | 1792/3200 [02:10<00:21, 66.19it/s][A
activations:  58%|█████▊    | 1856/3200 [02:11<00:20, 65.68it/s][A
activations:  60%|██████    | 1920/3200 [02:12<00:19, 66.10it/s][A
activations:  62%|██████▏   | 1984/3200 [02:13<00:18, 66.52it/s][A
activations:  64%|██████▍   | 2048/3200 [02:14<00:17, 66.41it/s][A
activations:  66%|██████▌   | 2112/3200 [02:15<00:16, 66.64it/s][A
activations:  68%|██████▊   | 2176/3200 [02:16<00:15, 66.76it/s][A
activations:  70%|███████   | 2240/3200 [02:17<00:14, 66.41it/s][A
activations:  72%|███████▏  | 2304/3200 [02:18<00:13, 66.04it/s][A
activations:  74%|███████▍  | 2368/3200 [02:19<00:12, 66.35it/s][A
activations:  76%|███████▌  | 2432/3200 [02:20<00:11, 66.51it/s][A
activations:  78%|███████▊  | 2496/3200 [02:21<00:10, 66.57it/s][A
activations:  80%|████████  | 2560/3200 [02:22<00:09, 66.77it/s][A
activations:  82%|████████▏ | 2624/3200 [02:22<00:08, 66.97it/s][A
activations:  84%|████████▍ | 2688/3200 [02:23<00:07, 66.92it/s][A
activations:  86%|████████▌ | 2752/3200 [02:24<00:06, 67.09it/s][A
activations:  88%|████████▊ | 2816/3200 [02:25<00:05, 66.29it/s][A
activations:  90%|█████████ | 2880/3200 [02:26<00:04, 66.26it/s][A
activations:  92%|█████████▏| 2944/3200 [02:27<00:03, 66.48it/s][A
activations:  94%|█████████▍| 3008/3200 [02:28<00:02, 66.71it/s][A
activations:  96%|█████████▌| 3072/3200 [02:29<00:01, 66.90it/s][A
activations:  98%|█████████▊| 3136/3200 [02:30<00:00, 66.62it/s][A
activations: 100%|██████████| 3200/3200 [02:31<00:00, 66.92it/s][Aactivations: 100%|██████████| 3200/3200 [02:31<00:00, 21.11it/s]
INFO:model_tools.activations.core.ActivationsExtractorHelper:Packaging into assembly
zscore
activations zcore shape:
(1000, 576000)
pca eigenvalues:
(1000, 576000)
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])
conv1 torch.Size([64, 24, 96, 96])
mp1 torch.Size([64, 24, 32, 32])
conv2 torch.Size([64, 1000, 24, 24])
mp2 torch.Size([64, 1000, 12, 12])
output torch.Size([64, 1000, 12, 12])

layer packaging:   0%|          | 0/1 [00:00<?, ?it/s][Alayer packaging: 100%|██████████| 1/1 [00:00<00:00, 97.81it/s]

cross-validation:   0%|          | 0/10 [00:00<?, ?it/s][A
cross-validation:  10%|█         | 1/10 [00:01<00:13,  1.45s/it][A
cross-validation:  20%|██        | 2/10 [00:02<00:11,  1.45s/it][A
cross-validation:  30%|███       | 3/10 [00:04<00:10,  1.46s/it][A/home/wtownle1/env_dim/dim-powerlaw/lib/python3.7/site-packages/sklearn/cross_decomposition/_pls.py:97: ConvergenceWarning: Maximum number of iterations reached
  ConvergenceWarning)

cross-validation:  40%|████      | 4/10 [00:05<00:09,  1.51s/it][A
cross-validation:  50%|█████     | 5/10 [00:07<00:07,  1.51s/it][A
cross-validation:  60%|██████    | 6/10 [00:08<00:05,  1.48s/it][A
cross-validation:  70%|███████   | 7/10 [00:10<00:04,  1.46s/it][A
cross-validation:  80%|████████  | 8/10 [00:11<00:02,  1.45s/it][A
cross-validation:  90%|█████████ | 9/10 [00:13<00:01,  1.45s/it][A
cross-validation: 100%|██████████| 10/10 [00:14<00:00,  1.46s/it][Across-validation: 100%|██████████| 10/10 [00:14<00:00,  1.47s/it]
layers: 100%|██████████| 1/1 [02:46<00:00, 166.59s/it]layers: 100%|██████████| 1/1 [02:46<00:00, 166.59s/it]
main total runtime: 0:05:55.931222
